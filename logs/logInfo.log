[2024-12-02 12:03:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 3900 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 12:03:58 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:03:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:03:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:03:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:03:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:03:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:03:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:03:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:03:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 916 ms
[2024-12-02 12:03:59 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 12:03:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:04:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:04:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:04:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:04:00 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 2.027 seconds (process running for 2.462)
[2024-12-02 12:04:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:04:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:04:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@3216551f, page=1, size=20, startIdx=0)
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@303e6b6d
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 12:04:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 12:04:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 12:04:13 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'aqqqq'
 {executed in 5 msec}
[2024-12-02 12:04:13 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'aqqqq'
 {executed in 0 msec}
[2024-12-02 12:04:13 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|1         |
|----------|

[2024-12-02 12:04:34 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 131 ms
[2024-12-02 12:23:01 INFO http-nio-8080-exec-8] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@7cf0cfee, page=1, size=20, startIdx=0)
[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 12:48:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 12:48:42 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 12:49:35 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.model.FeedGetReq] page: 2, size: null, userId: 12
[2024-12-02 12:49:35 INFO http-nio-8080-exec-7] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@4ab05f6e, page=2, size=20, startIdx=20)
[2024-12-02 12:49:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-02 12:49:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-02 12:58:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:58:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:17:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 4856 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 16:17:43 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:17:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:17:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:17:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:17:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:17:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:17:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:17:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:17:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 770 ms
[2024-12-02 16:17:44 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 16:17:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:17:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:17:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:17:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:17:44 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.609 seconds (process running for 1.938)
[2024-12-02 16:24:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 29 class path changes (0 additions, 0 deletions, 29 modifications)
[2024-12-02 16:24:01 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:24:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 4856 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 16:24:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:24:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:24:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:24:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:24:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:24:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:24:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 201 ms
[2024-12-02 16:24:02 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 16:24:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:24:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:24:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:24:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:24:02 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.373 seconds (process running for 379.685)
[2024-12-02 16:24:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 16:24:15 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:24:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:24:15 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:24:15 INFO http-nio-8080-exec-7] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 171 ms
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: 30, userId: 12
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@2c9ea364, page=1, size=30, startIdx=0)
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2ab86297
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:24:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:24:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:24:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:24:32 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 16:24:32 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT -17, 21
 {FAILED after 16 msec}
java.sql.SQLSyntaxErrorException: (conn=24) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy98.selFeedCommentList(Unknown Source)
	at com.green.greengramver2.feed.FeedService.getFeedList(FeedService.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver2.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver2.feed.FeedController.getFeedList(FeedController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:24:32 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=24) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\SGSG\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_comment_id AS feedCommentId              , A.comment              , A.user_id AS writerUserId              , IFNULL(B.nick_name, B.uid) AS writerNm              , B.pic AS writerPic          FROM feed_comments A         INNER JOIN user B            ON A.user_id = B.user_id         WHERE A.feed_id = ?         ORDER BY A.feed_comment_id DESC         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=24) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=24) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy4/jdk.proxy4.$Proxy98.selFeedCommentList(Unknown Source)
	at com.green.greengramver2.feed.FeedService.getFeedList(FeedService.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver2.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver2.feed.FeedController.getFeedList(FeedController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:25:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:25:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:25:21 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 1856 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 16:25:21 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:25:21 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:25:21 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:25:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:25:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:25:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:25:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:25:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:25:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 764 ms
[2024-12-02 16:25:22 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 16:25:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:25:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:25:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:25:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:25:22 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.612 seconds (process running for 1.948)
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: 30, userId: 12
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@11149387, page=1, size=30, startIdx=0)
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f50b9a7
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:25:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:25:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:25:25 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:25:25 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 16:25:25 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT -17, 21
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengramver2.feed.FeedService.getFeedList(FeedService.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver2.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver2.feed.FeedController.getFeedList(FeedController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:25:25 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\SGSG\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.feed_comment_id AS feedCommentId              , A.comment              , A.user_id AS writerUserId              , IFNULL(B.nick_name, B.uid) AS writerNm              , B.pic AS writerPic          FROM feed_comments A         INNER JOIN user B            ON A.user_id = B.user_id         WHERE A.feed_id = ?         ORDER BY A.feed_comment_id DESC         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengramver2.feed.FeedService.getFeedList(FeedService.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengramver2.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengramver2.feed.FeedController.getFeedList(FeedController.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:25:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:25:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:25:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 2324 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 16:25:56 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:25:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:25:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 800 ms
[2024-12-02 16:25:57 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:25:57 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.632 seconds (process running for 1.965)
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: 30, userId: 12
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@11149387, page=1, size=30, startIdx=0)
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@f50b9a7
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|1               |aqqqq   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:26:00 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:26:00 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:26:46 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 16:26:46 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:26:46 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:26:46 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:26:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 2324 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 16:26:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:26:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:26:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:26:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:26:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:26:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:26:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 190 ms
[2024-12-02 16:26:46 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 16:26:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:26:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:26:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:26:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:26:46 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 0.337 seconds (process running for 50.804)
[2024-12-02 16:26:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 16:27:22 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:27:22 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:27:22 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@531ca421, page=1, size=20, startIdx=0)
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3bc8fd4b
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|1               |aqqqq   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:27:23 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:23 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = '1111'
 {executed in 6 msec}
[2024-12-02 16:27:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = '1111'
 {executed in 1 msec}
[2024-12-02 16:27:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|2         |
|----------|

[2024-12-02 16:27:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㅁㅁㅁㅁㅁ'
 {executed in 6 msec}
[2024-12-02 16:27:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㅁㅁㅁㅁㅁ'
 {executed in 0 msec}
[2024-12-02 16:27:29 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|3         |
|----------|

[2024-12-02 16:27:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㄴㄴㄴㄴ'
 {executed in 1 msec}
[2024-12-02 16:27:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㄴㄴㄴㄴ'
 {executed in 0 msec}
[2024-12-02 16:27:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|4         |
|----------|

[2024-12-02 16:27:31 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㅇㅇㅇㅇ'
 {executed in 1 msec}
[2024-12-02 16:27:31 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㅇㅇㅇㅇ'
 {executed in 0 msec}
[2024-12-02 16:27:31 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|5         |
|----------|

[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: 30, userId: 12
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@3c81b373, page=1, size=30, startIdx=0)
[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|2               |1111    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:56 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] page: 2, size: null, userId: 12
[2024-12-02 16:37:56 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@301ac979, page=2, size=20, startIdx=20)
[2024-12-02 16:37:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-02 16:37:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-02 16:41:02 INFO http-nio-8080-exec-1] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:41:28 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:29 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:41:35 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'BBDI' is not supported]
[2024-12-02 16:41:35 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:41:43 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:57 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:42:46 INFO http-nio-8080-exec-1] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:43:55 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:05 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'RSAS' is not supported]
[2024-12-02 16:44:05 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:06 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:08 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:11 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:45:43 INFO http-nio-8080-exec-8] [com.green.greengramver2.user.UserController] 파일정보: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7b6f3374
[2024-12-02 16:45:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO user
        SET uid = '안녕하소'
          , upw = '$2a$10$DcxV1Dp0YZoscthaDDeueehN.kiZC0.njcDXe4NOaNjEMFFb9Ggqm'
          , nick_name = '안녕하소'
          , pic = '42ea793c-e618-419a-a041-9ae3daa93290.jpg'
 {executed in 0 msec}
[2024-12-02 16:45:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO user
        SET uid = '안녕하소'
          , upw = '$2a$10$DcxV1Dp0YZoscthaDDeueehN.kiZC0.njcDXe4NOaNjEMFFb9Ggqm'
          , nick_name = '안녕하소'
          , pic = '42ea793c-e618-419a-a041-9ae3daa93290.jpg'
 {executed in 0 msec}
[2024-12-02 16:45:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|16        |
|----------|

[2024-12-02 16:45:48 INFO http-nio-8080-exec-7] [com.green.greengramver2.user.UserController] 파일정보: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7d438bbc
[2024-12-02 16:45:48 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO user
        SET uid = '1234'
          , upw = '$2a$10$CMzlwWPaiLzpGZBaXmWIb.RD9pfbct5aKHpUvQ0ywd85qdXvY2Xui'
          , nick_name = '1234'
          , pic = '5caa864c-8be6-4f62-8764-e140c0225815.jpg'
 {executed in 0 msec}
[2024-12-02 16:45:48 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO user
        SET uid = '1234'
          , upw = '$2a$10$CMzlwWPaiLzpGZBaXmWIb.RD9pfbct5aKHpUvQ0ywd85qdXvY2Xui'
          , nick_name = '1234'
          , pic = '5caa864c-8be6-4f62-8764-e140c0225815.jpg'
 {executed in 0 msec}
[2024-12-02 16:45:48 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|17        |
|----------|

[2024-12-02 16:45:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = '안녕하소'
 {executed in 0 msec}
[2024-12-02 16:45:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|16      |안녕하소     |42ea793c-e618-419a-a041-9ae3daa93290.jpg |$2a$10$DcxV1Dp0YZoscthaDDeueehN.kiZC0.njcDXe4NOaNjEMFFb9Ggqm |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 16
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@3ad1e826, page=1, size=20, startIdx=0)
[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 16
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|2               |1111    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:45:49 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:49 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = '1234'
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|17      |1234     |5caa864c-8be6-4f62-8764-e140c0225815.jpg |$2a$10$CMzlwWPaiLzpGZBaXmWIb.RD9pfbct5aKHpUvQ0ywd85qdXvY2Xui |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 17
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@228aa0ed, page=1, size=20, startIdx=0)
[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 17
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|2               |1111    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 16 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:45:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:45:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:00 INFO http-nio-8080-exec-9] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:46:00 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] p----------------------: FeedPostReq(feedId=0, writerUserId=17, contents=asdf, location=asdf)
[2024-12-02 16:46:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed
        SET writer_user_id = 17
        , contents = 'asdf'
        , location = 'asdf'
 {executed in 0 msec}
[2024-12-02 16:46:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 17
        , contents = 'asdf'
        , location = 'asdf'
 {executed in 0 msec}
[2024-12-02 16:46:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|29        |
|----------|

[2024-12-02 16:46:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
          29, 'acf066ca-0e44-45c8-b170-e473f991ba71.jpg'
         )
 {executed in 0 msec}
[2024-12-02 16:46:05 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] p----------------------: FeedPostReq(feedId=0, writerUserId=16, contents=i am panguin, location=남극)
[2024-12-02 16:46:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed
        SET writer_user_id = 16
        , contents = 'i am panguin'
        , location = '남극'
 {executed in 1 msec}
[2024-12-02 16:46:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 16
        , contents = 'i am panguin'
        , location = '남극'
 {executed in 0 msec}
[2024-12-02 16:46:05 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|30        |
|----------|

[2024-12-02 16:46:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
          30, '27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg'
         )
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 16
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@2cb0a00f, page=1, size=20, startIdx=0)
[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 16
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|2               |1111    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:46:18 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:18 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:22 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:23 INFO http-nio-8080-exec-8] [com.green.greengramver2.feed.like.FeedLikeController] feedLikeToggle > p : FeedLikeReq(feedId=29, userId=16)
[2024-12-02 16:46:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed_like
        WHERE feed_id = 29
          AND user_id = 16
 {executed in 0 msec}
[2024-12-02 16:46:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_like
        SET feed_id = 29
          , user_id = 16
 {executed in 7 msec}
[2024-12-02 16:46:23 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 17
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@1667ebe0, page=1, size=20, startIdx=0)
[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 17
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 15 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|2               |1111    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:46:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:46:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:46:31 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'LWLK' is not supported]
[2024-12-02 16:46:31 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:41 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:41 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:42 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.like.FeedLikeController] feedLikeToggle > p : FeedLikeReq(feedId=30, userId=16)
[2024-12-02 16:46:42 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM feed_like
        WHERE feed_id = 30
          AND user_id = 16
 {executed in 0 msec}
[2024-12-02 16:46:42 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_like
        SET feed_id = 30
          , user_id = 16
 {executed in 0 msec}
[2024-12-02 16:49:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㅇㅋ'
 {executed in 0 msec}
[2024-12-02 16:49:19 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
11. getGeneratedKeys on query: INSERT INTO feed_comments
        SET feed_id = 28
        , user_id = 12
        , comment = 'ㅇㅋ'
 {executed in 0 msec}
[2024-12-02 16:49:19 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|6         |
|----------|

[2024-12-02 16:49:31 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.model.FeedGetReq] page: 3, size: null, userId: 12
[2024-12-02 16:49:31 INFO http-nio-8080-exec-2] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@ae41956, page=3, size=20, startIdx=40)
[2024-12-02 16:49:31 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}
[2024-12-02 16:49:31 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |uid |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|----|-------|
|--------|---------|---------|-----------|--------|---------|----|----|-------|

[2024-12-02 16:53:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-02 16:53:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-02 16:54:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 10572 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-02 16:54:05 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:54:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:54:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:54:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:54:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:54:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:54:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:54:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 868 ms
[2024-12-02 16:54:06 INFO restartedMain] [com.green.greengramver2.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-02 16:54:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:54:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:54:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:54:07 INFO restartedMain] [com.green.greengramver2.GreenGramVer2Application] Started GreenGramVer2Application in 1.73 seconds (process running for 2.061)
[2024-12-02 16:54:07 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:54:07 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:54:07 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@70439733, page=1, size=20, startIdx=0)
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65db163
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|6               |ㅇㅋ      |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:54:07 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:07 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:14 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 17
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@44492a7d, page=1, size=20, startIdx=0)
[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 17
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|6               |ㅇㅋ      |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:54:47 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:47 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [com.green.greengramver2.feed.FeedController] p----------------------: Paging(super=com.green.greengramver2.feed.model.FeedGetReq@182adaf2, page=1, size=20, startIdx=0)
[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|30      |i am panguin |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf         |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss          |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf          |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22       |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22       |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22       |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라         |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|------------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                       |
|----------------|--------|--------|---------|------------------------------------------|
|6               |ㅇㅋ      |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|5               |ㅇㅇㅇㅇ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|4               |ㄴㄴㄴㄴ    |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|3               |ㅁㅁㅁㅁㅁ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|--------|--------|---------|------------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:07:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:07:51 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:21:33 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:21:33 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
