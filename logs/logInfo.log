[2024-12-04 11:13:34 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 11244 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-04 11:13:34 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 11:13:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-04 11:13:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-04 11:13:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 11:13:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:13:35 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 11:13:35 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 11:13:35 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 11:13:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 935 ms
[2024-12-04 11:13:35 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-04 11:13:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 11:13:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 11:13:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:13:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 11:13:35 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.979 seconds (process running for 2.42)
[2024-12-04 11:13:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-04 11:13:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-04 11:13:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 12
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@508252b9, page=1, size=20, startIdx=0)
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@379befa9
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 12
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 5 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |1      |
|--------|------------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 1 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:13:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = ''
 {executed in 0 msec}
[2024-12-04 11:13:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|----|----|
|user_id |nickname |pic |upw |
|--------|---------|----|----|
|--------|---------|----|----|

[2024-12-04 11:13:51 INFO http-nio-8080-exec-7] [com.green.greengramver.user.UserController] 파일정보: null
[2024-12-04 11:13:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'test111'
          , upw = '$2a$10$jjjc8zuqhUcSbfA9CRCx8eC2re46eNDHVwU4OUZy6F9rm9EVYJ19S'
          , nick_name = '사공그에게 압도적 감사'
          , pic = NULL
 {executed in 4 msec}
[2024-12-04 11:13:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = 'test111'
          , upw = '$2a$10$jjjc8zuqhUcSbfA9CRCx8eC2re46eNDHVwU4OUZy6F9rm9EVYJ19S'
          , nick_name = '사공그에게 압도적 감사'
          , pic = NULL
 {executed in 0 msec}
[2024-12-04 11:13:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|19        |
|----------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'test111'
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|----|-------------------------------------------------------------|
|user_id |nickname     |pic |upw                                                          |
|--------|-------------|----|-------------------------------------------------------------|
|19      |사공그에게 압도적 감사 |null|$2a$10$jjjc8zuqhUcSbfA9CRCx8eC2re46eNDHVwU4OUZy6F9rm9EVYJ19S |
|--------|-------------|----|-------------------------------------------------------------|

[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 19
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@2162f5bf, page=1, size=20, startIdx=0)
[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm |uid  |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소     |안녕하소 |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234     |1234 |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동      |test |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|---------|-----|------------------------------------------|-------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:13:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:13:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:14:03 INFO http-nio-8080-exec-3] [com.green.greengramver.feed.FeedController] p----------------------: FeedPostReq(feedId=0, writerUserId=19, contents=aaa, location=ㅁㅁ)
[2024-12-04 11:14:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 19
        , contents = 'aaa'
        , location = 'ㅁㅁ'
 {executed in 1 msec}
[2024-12-04 11:14:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 19
        , contents = 'aaa'
        , location = 'ㅁㅁ'
 {executed in 0 msec}
[2024-12-04 11:14:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|33        |
|----------|

[2024-12-04 11:14:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
          33, '58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg'
         )
 {executed in 1 msec}
[2024-12-04 11:15:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-04 11:15:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-04 11:15:14 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 8812 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-04 11:15:14 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 11:15:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-04 11:15:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-04 11:15:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 11:15:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:15:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 11:15:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 11:15:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 11:15:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 765 ms
[2024-12-04 11:15:15 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-04 11:15:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 11:15:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 11:15:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:15:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 11:15:15 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.658 seconds (process running for 2.003)
[2024-12-04 11:15:43 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 10012 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-04 11:15:43 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 11:15:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-04 11:15:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-04 11:15:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 11:15:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:15:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 11:15:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 11:15:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 11:15:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1016 ms
[2024-12-04 11:15:44 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-04 11:15:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 11:15:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 11:15:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 11:15:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 11:15:45 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.893 seconds (process running for 2.255)
[2024-12-04 11:15:46 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-04 11:15:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-04 11:15:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 19
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@6e399def, page=1, size=20, startIdx=0)
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4f5cc022
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 19
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:15:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:15:47 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:13 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserController] 파일정보: org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6b87f8
[2024-12-04 11:16:13 INFO http-nio-8080-exec-5] [com.green.greengramver.user.UserService] askdjaslkdsalkdjaldjalUserSignUpReq(userId=0, pic=ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg, uid=test23, upw=$2a$10$G5LbMnQQExfVYi9U.0ffPuQ8Q.xDgl7eEdKgpm01/yRcOGfebGGKS, nickName=햐지에게 주는 편지)
[2024-12-04 11:16:13 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
        SET uid = 'test23'
          , upw = '$2a$10$G5LbMnQQExfVYi9U.0ffPuQ8Q.xDgl7eEdKgpm01/yRcOGfebGGKS'
          , nick_name = '햐지에게 주는 편지'
          , pic = 'ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg'
 {executed in 1 msec}
[2024-12-04 11:16:13 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
        SET uid = 'test23'
          , upw = '$2a$10$G5LbMnQQExfVYi9U.0ffPuQ8Q.xDgl7eEdKgpm01/yRcOGfebGGKS'
          , nick_name = '햐지에게 주는 편지'
          , pic = 'ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg'
 {executed in 0 msec}
[2024-12-04 11:16:13 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|20        |
|----------|

[2024-12-04 11:16:16 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'test23'
 {executed in 0 msec}
[2024-12-04 11:16:16 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname   |pic                                      |upw                                                          |
|--------|-----------|-----------------------------------------|-------------------------------------------------------------|
|20      |햐지에게 주는 편지 |ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg |$2a$10$G5LbMnQQExfVYi9U.0ffPuQ8Q.xDgl7eEdKgpm01/yRcOGfebGGKS |
|--------|-----------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 20
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@36479e5d, page=1, size=20, startIdx=0)
[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 20
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:16:17 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:17 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:26 INFO http-nio-8080-exec-9] [com.green.greengramver.feed.FeedController] p----------------------: FeedPostReq(feedId=0, writerUserId=20, contents=zzzz, location=ㅁㅁ)
[2024-12-04 11:16:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 20
        , contents = 'zzzz'
        , location = 'ㅁㅁ'
 {executed in 1 msec}
[2024-12-04 11:16:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 20
        , contents = 'zzzz'
        , location = 'ㅁㅁ'
 {executed in 0 msec}
[2024-12-04 11:16:26 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|34        |
|----------|

[2024-12-04 11:16:26 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
          34, '775dcb86-eeb7-4702-9b15-2d510587a7a1.png'
         )
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 20
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@73e02043, page=1, size=20, startIdx=0)
[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 20
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |20      |햐지에게 주는 편지   |test23  |ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg  |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 11:16:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 11:16:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 11:34:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-04 11:34:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-04 12:04:29 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 11128 (D:\SGSG\GreenGramVer2\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer2)
[2024-12-04 12:04:29 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-04 12:04:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-04 12:04:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-04 12:04:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-04 12:04:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-04 12:04:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-04 12:04:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-04 12:04:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-04 12:04:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-04 12:04:29 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-04 12:04:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-04 12:04:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-04 12:04:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-04 12:04:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-04 12:04:30 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.694 seconds (process running for 2.072)
[2024-12-04 12:04:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-04 12:04:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-04 12:04:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 20
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@6a7e0e28, page=1, size=20, startIdx=0)
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6835c4bd
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 20
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |20      |햐지에게 주는 편지   |test23  |ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg  |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 12:04:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , IFNULL(nick_name, uid) AS nickName
        , pic, upw
         FROM user
        WHERE uid = 'test23'
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname   |pic                                      |upw                                                          |
|--------|-----------|-----------------------------------------|-------------------------------------------------------------|
|20      |햐지에게 주는 편지 |ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg |$2a$10$G5LbMnQQExfVYi9U.0ffPuQ8Q.xDgl7eEdKgpm01/yRcOGfebGGKS |
|--------|-----------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.model.FeedGetReq] page: 1, size: null, userId: 20
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [com.green.greengramver.feed.FeedController] p----------------------: Paging(super=com.green.greengramver.feed.model.FeedGetReq@e43052a, page=1, size=20, startIdx=0)
[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_id AS feedId, A.contents, A.location, A.created_at AS createdAt,
        B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.uid, B.pic AS writerPic
        , IF(C.user_id IS NULL, 0, 1) AS isLike
        FROM feed A INNER JOIN user B
          ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
           ON A.feed_id = C.feed_id
          AND C.user_id = 20
        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|feed_id |contents          |location |created_at          |user_id |writernm     |uid     |pic                                       |islike |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|
|34      |zzzz              |ㅁㅁ       |2024-12-04 11:16:26 |20      |햐지에게 주는 편지   |test23  |ef1b1137-a740-4b25-8fb3-f6b64404a93f.jpg  |0      |
|33      |aaa               |ㅁㅁ       |2024-12-04 11:14:03 |19      |사공그에게 압도적 감사 |test111 |null                                      |0      |
|32      |SIUUUUUUU호날두 GOAT |USA      |2024-12-03 13:14:20 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|31      |aaa               |ㅁㅁaa     |2024-12-03 10:53:45 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|30      |i am panguin      |남극       |2024-12-02 16:46:05 |16      |안녕하소         |안녕하소    |42ea793c-e618-419a-a041-9ae3daa93290.jpg  |0      |
|29      |asdf              |asdf     |2024-12-02 16:46:00 |17      |1234         |1234    |5caa864c-8be6-4f62-8764-e140c0225815.jpg  |0      |
|28      |I am panguin      |남극       |2024-11-29 16:49:58 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|17      |sss               |ㅁㅁ       |2024-11-29 16:28:19 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|16      |daf               |daf      |2024-11-29 16:20:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|4       |테스트용22            |대구       |2024-11-29 10:37:54 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|3       |테스트용22            |대구       |2024-11-29 10:37:17 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|2       |테스트용22            |대구       |2024-11-29 10:36:40 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|1       |블라블라              |대구       |2024-11-28 17:22:09 |12      |고길동          |test    |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |0      |
|--------|------------------|---------|--------------------|--------|-------------|--------|------------------------------------------|-------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|775dcb86-eeb7-4702-9b15-2d510587a7a1.png |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 34
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58a9507e-031b-4f0c-a5d6-979f7643f1cf.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 33
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|495de257-9cf3-440d-b485-0341c60aa5b5.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d5307637-bb07-4d41-82ee-95421cb9a91a.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 31
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 30
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|27fe12ea-7c45-4304-b062-c7346bfdeb1a.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 30
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|acf066ca-0e44-45c8-b170-e473f991ba71.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9fbccabe-5e07-400b-9fd9-99c75cbb4d96.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|---------|------------------------------------------|
|feed_comment_id |comment   |user_id |writernm |pic                                       |
|----------------|----------|--------|---------|------------------------------------------|
|12              |123123213 |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|8               |ㅋㅌㅌㅋㅊㅌㅋ   |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|7               |ㄴㅁㅇㅁㅇ     |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|6               |ㅇㅋ        |12      |고길동      |ebd8b488-d226-4630-9c1f-6d4a196be1ef.jpeg |
|----------------|----------|--------|---------|------------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e96cd3e4-753e-4649-8b4b-b324f69e7d03.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|7fb72374-427c-418f-a599-0765bf0bea9e.png |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 4
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|19745bd6-523d-468f-bf92-cf358d94c1cb.jpg |
|b204120a-7d7a-4c47-a6ea-18ba7d978ee3.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 4
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|72671603-d18a-4afa-a1d2-187c5a5464d6.jpg |
|-----------------------------------------|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 3
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 2
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 1
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-04 12:04:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.feed_comment_id AS feedCommentId
             , A.comment
             , A.user_id AS writerUserId
             , IFNULL(B.nick_name, B.uid) AS writerNm
             , B.pic AS writerPic
         FROM feed_comments A
        INNER JOIN user B
           ON A.user_id = B.user_id
        WHERE A.feed_id = 1
        ORDER BY A.feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-04 12:04:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-04 12:05:00 INFO http-nio-8080-exec-7] [com.green.greengramver.feed.FeedController] p----------------------: FeedPostReq(feedId=0, writerUserId=20, contents=심영, location=대구)
[2024-12-04 12:05:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
        SET writer_user_id = 20
        , contents = '심영'
        , location = '대구'
 {executed in 0 msec}
[2024-12-04 12:05:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
        SET writer_user_id = 20
        , contents = '심영'
        , location = '대구'
 {executed in 0 msec}
[2024-12-04 12:05:00 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|35        |
|----------|

[2024-12-04 12:05:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
          35, '9b8b0baf-d195-4f2f-a49b-a878ee4f5c0e.gif'
         )
 {executed in 0 msec}
[2024-12-04 14:21:40 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=32m2s913ms168µs701ns).
[2024-12-04 16:40:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-04 16:40:01 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 11:43:04 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 11548 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:43:04 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:43:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:43:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:43:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:43:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:43:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:43:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:43:05 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:43:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 1050 ms
[2024-12-06 11:43:05 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-06 11:43:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:43:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:43:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:43:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:43:06 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 2.147 seconds (process running for 2.7)
[2024-12-06 11:43:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 11:43:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 11:43:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 11:43:11 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 204 ms
[2024-12-06 11:44:38 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 11304 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:44:38 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:44:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:44:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:44:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:44:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:44:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:44:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:44:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:44:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 765 ms
[2024-12-06 11:44:39 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-06 11:44:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:44:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:44:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:44:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:44:39 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.622 seconds (process running for 1.963)
[2024-12-06 11:44:43 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 11:44:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 11:44:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 11:44:44 INFO http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 195 ms
[2024-12-06 11:44:52 INFO http-nio-8080-exec-5] [com.green.greengramver.user.follow.UserFollowController] UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=12)
[2024-12-06 11:45:08 INFO http-nio-8080-exec-6] [com.green.greengramver.user.follow.UserFollowController] UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=12)
[2024-12-06 11:45:47 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 3652 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:45:47 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:45:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:45:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:45:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:45:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:45:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:45:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:45:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 945 ms
[2024-12-06 11:45:48 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-06 11:45:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:45:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:45:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:45:48 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.798 seconds (process running for 2.144)
[2024-12-06 11:45:51 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 11:45:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 11:45:51 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 11:45:51 INFO http-nio-8080-exec-1] [com.green.greengramver.user.follow.UserFollowController] Post: UserFollowReq p: UserFollowReq(fromUserId=0, toUserId=0)
[2024-12-06 11:52:47 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 3188 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:52:47 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:52:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:52:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:52:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:52:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:52:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:52:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:52:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:52:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 813 ms
[2024-12-06 11:52:48 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-06 11:52:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:52:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:52:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:52:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:52:48 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.864 seconds (process running for 2.219)
[2024-12-06 11:52:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 11:52:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 11:52:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 11:52:59 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 196 ms
[2024-12-06 11:53:04 INFO http-nio-8080-exec-10] [com.green.greengramver.user.follow.UserFollowController] Post: UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=12)
[2024-12-06 11:53:04 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 11:53:04 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3c70b822
[2024-12-06 11:53:04 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 11:53:04 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.user_follow' doesn't exist
[2024-12-06 11:53:04 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 19
          , to_user_id = 12
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=4) Table 'greengram_ver2.user_follow' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUserFollow(Unknown Source)
	at com.green.greengramver.user.follow.UserFollowService.postUserFollow(UserFollowService.java:15)
	at com.green.greengramver.user.follow.UserFollowController.postUserFollow(UserFollowController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 11:53:04 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=4) Table 'greengram_ver2.user_follow' doesn't exist
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?           , to_user_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=4) Table 'greengram_ver2.user_follow' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=4) Table 'greengram_ver2.user_follow' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUserFollow(Unknown Source)
	at com.green.greengramver.user.follow.UserFollowService.postUserFollow(UserFollowService.java:15)
	at com.green.greengramver.user.follow.UserFollowController.postUserFollow(UserFollowController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 11:53:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 11:53:22 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 11:53:24 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 4324 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:53:24 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:53:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:53:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:53:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:53:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:53:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:53:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:53:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:53:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-06 11:53:24 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-06 11:53:25 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:53:25 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:53:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:53:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:53:25 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.614 seconds (process running for 1.952)
[2024-12-06 11:53:34 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 5564 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:53:34 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:53:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:53:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:53:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:53:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:53:35 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:53:35 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:53:35 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:53:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 755 ms
[2024-12-06 11:53:35 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-06 11:53:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:53:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:53:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:53:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:53:35 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.604 seconds (process running for 1.938)
[2024-12-06 11:53:44 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 10152 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 11:53:44 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:53:44 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:53:44 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:53:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:53:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:53:45 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:53:45 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:53:45 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:53:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 772 ms
[2024-12-06 11:53:45 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver3
[2024-12-06 11:53:45 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:53:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:53:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:53:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:53:45 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.728 seconds (process running for 2.069)
[2024-12-06 11:53:48 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 11:53:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 11:53:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 11:53:48 INFO http-nio-8080-exec-1] [com.green.greengramver.user.follow.UserFollowController] Post: UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=12)
[2024-12-06 11:53:48 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 11:53:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41582656
[2024-12-06 11:53:49 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 11:53:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 19
          , to_user_id = 12
 {executed in 2 msec}
[2024-12-06 11:54:08 INFO http-nio-8080-exec-2] [com.green.greengramver.user.follow.UserFollowController] Post: UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=12)
[2024-12-06 11:54:08 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1062-23000: Duplicate entry '19-12' for key 'PRIMARY'
[2024-12-06 11:54:08 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 19
          , to_user_id = 12
 {FAILED after 6 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=14) Duplicate entry '19-12' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUserFollow(Unknown Source)
	at com.green.greengramver.user.follow.UserFollowService.postUserFollow(UserFollowService.java:15)
	at com.green.greengramver.user.follow.UserFollowController.postUserFollow(UserFollowController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 11:54:08 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=14) Duplicate entry '19-12' for key 'PRIMARY'
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?           , to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=14) Duplicate entry '19-12' for key 'PRIMARY'
; (conn=14) Duplicate entry '19-12' for key 'PRIMARY'] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=14) Duplicate entry '19-12' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUserFollow(Unknown Source)
	at com.green.greengramver.user.follow.UserFollowService.postUserFollow(UserFollowService.java:15)
	at com.green.greengramver.user.follow.UserFollowController.postUserFollow(UserFollowController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 11:54:30 INFO http-nio-8080-exec-3] [com.green.greengramver.user.follow.UserFollowController] Post: UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=13)
[2024-12-06 11:54:30 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1452-23000: Cannot add or update a child row: a foreign key constraint fails (`greengram_ver3`.`user_follow`, CONSTRAINT `user_follow_ibfk_2` FOREIGN KEY (`to_user_id`) REFERENCES `user` (`user_id`))
[2024-12-06 11:54:30 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 19
          , to_user_id = 13
 {FAILED after 2 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=14) Cannot add or update a child row: a foreign key constraint fails (`greengram_ver3`.`user_follow`, CONSTRAINT `user_follow_ibfk_2` FOREIGN KEY (`to_user_id`) REFERENCES `user` (`user_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUserFollow(Unknown Source)
	at com.green.greengramver.user.follow.UserFollowService.postUserFollow(UserFollowService.java:15)
	at com.green.greengramver.user.follow.UserFollowController.postUserFollow(UserFollowController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 11:54:30 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=14) Cannot add or update a child row: a foreign key constraint fails (`greengram_ver3`.`user_follow`, CONSTRAINT `user_follow_ibfk_2` FOREIGN KEY (`to_user_id`) REFERENCES `user` (`user_id`))
### The error may exist in file [D:\SGSG\GreenGramVer3\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         SET from_user_id = ?           , to_user_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=14) Cannot add or update a child row: a foreign key constraint fails (`greengram_ver3`.`user_follow`, CONSTRAINT `user_follow_ibfk_2` FOREIGN KEY (`to_user_id`) REFERENCES `user` (`user_id`))
; (conn=14) Cannot add or update a child row: a foreign key constraint fails (`greengram_ver3`.`user_follow`, CONSTRAINT `user_follow_ibfk_2` FOREIGN KEY (`to_user_id`) REFERENCES `user` (`user_id`))] with root cause
java.sql.SQLIntegrityConstraintViolationException: (conn=14) Cannot add or update a child row: a foreign key constraint fails (`greengram_ver3`.`user_follow`, CONSTRAINT `user_follow_ibfk_2` FOREIGN KEY (`to_user_id`) REFERENCES `user` (`user_id`))
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.insUserFollow(Unknown Source)
	at com.green.greengramver.user.follow.UserFollowService.postUserFollow(UserFollowService.java:15)
	at com.green.greengramver.user.follow.UserFollowController.postUserFollow(UserFollowController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 11:54:59 INFO http-nio-8080-exec-4] [com.green.greengramver.user.follow.UserFollowController] Post: UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=14)
[2024-12-06 11:54:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id = 19
          , to_user_id = 14
 {executed in 6 msec}
[2024-12-06 11:55:09 INFO http-nio-8080-exec-5] [com.green.greengramver.user.follow.UserFollowController] Delete: UserFollowReq p: UserFollowReq(fromUserId=19, toUserId=12)
[2024-12-06 11:55:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id = 19
          AND to_user_id   = 12
 {executed in 0 msec}
[2024-12-06 12:15:28 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 36 class path changes (0 additions, 0 deletions, 36 modifications)
[2024-12-06 12:15:28 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:15:28 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:15:28 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:15:28 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 10152 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 12:15:28 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:15:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:15:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:15:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:15:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:15:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:15:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 205 ms
[2024-12-06 12:15:28 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-06 12:15:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:15:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:15:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:15:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:15:28 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 0.38 seconds (process running for 1305.043)
[2024-12-06 12:15:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:16:01 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.12 with PID 12116 (D:\SGSG\GreenGramVer3\build\classes\java\main started by Administrator in D:\SGSG\GreenGramVer3)
[2024-12-06 12:16:01 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:16:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:16:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:16:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:16:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:16:01 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:16:01 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:16:01 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:16:01 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 754 ms
[2024-12-06 12:16:02 INFO restartedMain] [com.green.greengramver.common.MyFileUtils] MyfileUtils - 생성자: D:/SGSG/download/green_gram_ver2
[2024-12-06 12:16:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:16:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:16:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:16:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:16:02 INFO restartedMain] [com.green.greengramver.GreenGramVer2Application] Started GreenGramVer2Application in 1.608 seconds (process running for 1.944)
